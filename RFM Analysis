CREATE OR replace DATABASE PROJECT_RFM;
USE DATABASE PROJECT_RFM;

CREATE OR replace SCHEMA RFM;
USE SCHEMA RFM;

CREATE OR replace TABLE RFM_ANALYSIS(
    CustomerID Number (30),
    PurchaseDate VARCHAR (30),
    TransactionAmount number(20),
    ProductInformation varchar (30),
    OrderID number(15),
    Location varchar(10)
    );

---\ CREATE BULK INSERT CSV FORMAT /---
---field optionally enclosed for double quatation in the records ""
create or replace file format csv_format
    type = 'csv' 
    compression = 'none' 
    field_delimiter = ','
    field_optionally_enclosed_by = '\042'
    skip_header = 1;



---SNIPPET/SNAPSHOT OF THE DATASET
select * from rfm_analysis limit 5;


-------------\ RFM ANALYSIS /-------------

/*
RFM SEGMENTATION: SEGMENTING YOUR CUSTOMER BASEN ON RECENCY(R), FREQUENCY(F), AND MONETARY(M) SCORES.
TO DO THE RFM ANALYSIS WE NEED MOSTLY,(OrderDate, CustomerID,CustomerName,SalesData)
Process to get the results:

            1) LATEST DATE, OLD DATE, DIFFERENCE OF(DAY, WEEK, MONTH,YEAR)
            2) FINDIND MONETARY VALUE, FREQUENCY, FIRT ORDER DATE,LATEST ORDER DATE AND RECENCY BY CUSTOMER WISE
            3) MAKE THE RESULT OF 2 IN A CTE1, THEN GET RFM FOR RECENCY,FREQUENCY,MONETARY
            4) MAKE THE RESULT OF 3 IN A CTE2, THEN GET RFM TOTAL SCORE, RFM SCORE CATEGORY.
            5) NOW WE CAN MOVE FORWARD BY MAKING CTE3, BUT GOOD PRACTICE IS TO CREATE A VIEW BY STEPS 2,3,4
            6) CHECK THE VEIW WORKS OR NOT THEN FIND THE UNIQUE RFM SCORE CATEGORY 
            7) FINALLY CATAGORIZED THE CUSTOMER BY RFM SCORE CATEGORY WITH COLLABORATING WITH MARKETTING TEAM
*/
---1)

SELECT 
    MAX(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD')) AS LATESTDATE 
from RFM_ANALYSIS;--2023-06-10

SELECT 
    MIN(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD')) AS EARLIESTDATE 
from RFM_ANALYSIS;--2023-04-11

SELECT 
    datediff('DAY', MIN(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD')), MAX(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD'))) AS DAY_DIFFERENCE 
FROM RFM_ANALYSIS;---60

---2

create view rfm_segment as
WITH CTE1 AS
    (SELECT 
        CUSTOMERID,
        ROUND(sum(TRANSACTIONAMOUNT),0) AS MONETARY_VALUE,
        ROUND(avg(TRANSACTIONAMOUNT),0) AS AVERAGE_MONETARY_VALUE,
        COUNT(DISTINCT ORDERID) AS FREQUENCY,
        MAX(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD')) AS FIRST_ORDER_DATE,
        (SELECT MAX(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD')) FROM RFM_ANALYSIS) AS LATEST_ORDER_DATE,
        DATEDIFF('DAY', max(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD')), (select max(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD')) from RFM_ANALYSIS)) AS Recency
FROM RFM_ANALYSIS
GROUP BY CUSTOMERID),
CTE2 as
        (SELECT *,
        NTILE(4) OVER (ORDER BY RECENCY DESC) AS RFM_RECENCY,
        NTILE(4) OVER (ORDER BY FREQUENCY ASC) AS RFM_FREQUENCY,
        NTILE(4) OVER (ORDER BY MONETARY_VALUE ASC) AS RFM_MONETARY
        FROM CTE1)

SELECT *,
    (RFM_RECENCY+RFM_FREQUENCY+RFM_MONETARY) AS RFM_TOTAL_SCORE,
    concat(CAST(RFM_RECENCY AS VARCHAR),CAST(RFM_FREQUENCY AS VARCHAR),CAST(RFM_MONETARY AS VARCHAR)) AS RFM_SCORE_CATEGORY
FROM CTE2; ---MAKE ALL THE STEPS AS VIEW

---6

SELECT * FROM RFM_SEGMENT; ---LETS CHECK OUR VIES WORKS OR NOT
        
SELECT 
    DISTINCT RFM_SCORE_CATEGORY
FROM RFM_SEGMENT
ORDER BY 1; ---LETS CHECK HOW MANY UNIQUE CATEGORY DO WE HAVE (41)

SELECT * FROM RFM_SEGMENT
WHERE RFM_SCORE_CATEGORY='113'; ---LETS CHECK A SPECEFIC CATEGORY FINDINGS

---7

SELECT
    CUSTOMERID, 
    RFM_RECENCY,
    RFM_FREQUENCY,
    RFM_MONETARY,
CASE 
    WHEN RFM_SCORE_CATEGORY IN (111, 112, 121, 122, 123, 132, 211, 212, 114, 141) THEN 'Lost Customers'
    WHEN RFM_SCORE_CATEGORY IN (133, 134, 143, 244, 334, 343, 344, 144) then 'slipping away, cannot lose'
    WHEN RFM_SCORE_CATEGORY IN (311, 411, 331) then 'new customers'
    WHEN RFM_SCORE_CATEGORY IN (222, 231, 221,  223, 233, 322) then 'potential churners'
    WHEN RFM_SCORE_CATEGORY IN (323, 333,321, 341, 422, 332, 432) then 'active'
    WHEN  RFM_SCORE_CATEGORY IN (433, 434, 443, 444) then 'loyal'
    ELSE 'OTHER'
END AS CUSTOMER_SEGMENT
FROM RFM_SEGMENT;
